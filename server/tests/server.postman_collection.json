{
	"info": {
		"_postman_id": "54c8391b-95eb-403f-a004-20aec4f14a62",
		"name": "WebDev",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User have been created successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"shariq\",\n    \"lastName\": \"taleb\",\n    \"email\": \"qarit@gamil.com\",\n   \"password\": \"12345678\",\n   \"confirmPassword\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200){",
									"    pm.environment.set(\"accessToken\", pm.response.json().accessToken);",
									"}",
									"pm.test(\"User has been logged in successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"qarit@gamil.com\",\n    \"password\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/auth/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "create collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();",
									"pm.globals.set(\"collection_id\", res._id);",
									"",
									"pm.test(\"Collection has been created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"NPM\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/collections",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections"
							]
						}
					},
					"response": []
				},
				{
					"name": "create deck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();",
									"pm.globals.set(\"deck_id\", res._id);",
									"",
									"pm.test(\"Deck has been created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"spicy selmon\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/decks",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create card inside deck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response.json();",
									"pm.globals.set(\"card_id\", res._id);",
									"",
									"pm.test(\"Card has been created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"front\": \"what is this \",\n    \"back\": \"kkk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/decks/{{deck_id}}/cards",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks",
								"{{deck_id}}",
								"cards"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Put",
			"item": [
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User has been updated\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Umar\",\n    \"lastName\": \"Mahmood\",\n    \"email\": \"um@gamil.com\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update deck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deck has been updated successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"spicy OOP\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/decks/{{deck_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks",
								"{{deck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add deck to collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deck has been added successfully in acollection\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/collections/{{collection_id}}/decks/{{deck_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections",
								"{{collection_id}}",
								"decks",
								"{{deck_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get",
			"item": [
				{
					"name": "Collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"You successfully get collection\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"6346eaa9c70838684244df51\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/collections",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get collection by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"You successfully get the collection by its id\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"6346eaa9c70838684244df51\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/collections/{{collection_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections",
								"{{collection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get decks inside collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"You successfully get deck inside the collection\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/collections/{{collection_id}}/decks",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections",
								"{{collection_id}}",
								"decks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all decks\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/decks",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deck by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all deck by id\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/decks/{{deck_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks",
								"{{deck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get due cards inside a deck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get due card by id\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/decks/{{deck_id}}/cards/due",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks",
								"{{deck_id}}",
								"cards",
								"due"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get card inside a deck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get card inside the deck\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/decks/{{deck_id}}/cards",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks",
								"{{deck_id}}",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all cards\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/cards",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Due cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all due cards\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/cards/due",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"cards",
								"due"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get card by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get card by id\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/cards/{{card_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"cards",
								"{{card_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get User\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get  specific deck inside a specifc collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get specific deck inside a collection\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/collections/{{collection_id}}/decks/{{deck_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections",
								"{{collection_id}}",
								"decks",
								"{{deck_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patch",
			"item": [
				{
					"name": "Update revision Cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Revision card has been updated successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"grade\":\"5\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/cards/{{card_id}}/revise",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"cards",
								"{{card_id}}",
								"revise"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Password has been updated successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"12345678\",\n    \"newPassword\": \"123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/password",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upadte collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Collection has been updated successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"chemistry\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/collections/{{collection_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections",
								"{{collection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Card has been updated\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"front\": \"how are you from?\",\n    \"back\": \"I am from good thanks!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/cards/{{card_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"cards",
								"{{card_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Card has been deleted\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/cards/{{card_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"cards",
								"{{card_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Deck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deck have been deleted successfully\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/decks/{{deck_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks",
								"{{deck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete deck inside a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deck inside the collection has been deleted\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/v1/collections/{{collection_id}}/decks/{{deck_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections",
								"{{collection_id}}",
								"decks",
								"{{deck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all the decks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"All the decks have been deleted\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/decks",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"decks"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Collection has been deleted successfully\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/collections/{{collection_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections",
								"{{collection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all the collections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"All the collections have been deleted\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/collections",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"collections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User has been deleted\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}